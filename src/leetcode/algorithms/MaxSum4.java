package leetcode.algorithms;

/**
 * Description: 3473. Sum of K Subarrays With Length at Least M
 *
 * @author Baltan
 * @date 2025/3/19 21:37
 */
public class MaxSum4 {
    public static void main(String[] args) {
        System.out.println(maxSum(new int[]{1, 2, -1, 3, 3, 4}, 2, 2));
        System.out.println(maxSum(new int[]{-10, 3, -1, -2}, 4, 1));
        System.out.println(maxSum(new int[]{-536, 68, -414, 794, -635, -570, 428, -365, 515, 316, -701, -917, 900, 94, 776, 888, 406, -935, 430, -548, 325, -919, -143, -41, -328, 802, -186, -24, -260, -913, -180, 103, -967, 88, 594, 866, 642, -293, 758, -182, -665, 33, -240, -215, 162, 760, -862, -68, -25, -567, -388, 956, -833, 678, 51, -798, 750, -160, -292, 443, -161, 492, -901, -929, -58, 353, -837, -551, 127, 977, -938, 196, 280, -979, -1, -116, -544, -682, -680, -109, 935, -39, 96, -284, -931, -165, 708, 191, -114, 459, 927, -552, -416, -31, -783, -797, -878, -555, 335, -636, -961, 368, 796, -78, 519, 767, 148, 762, 312, -726, -788, 437, -331, 273, 219, 332, -136, 696, -788, 698, 127, -729, 922, -84, 279, 379, -737, 160, 319, -931, -976, -296, 193, -265, -889, 604, 863, -983, 806, -681, -332, -249, -420, -459, 830, -312, 378, -839, -214, 716, -949, -616, 700, -835, -840, 287, -511, -143, -726, 563, 704, 77, -838, -967, -681, 538, 30, 697, 913, -577, -308, 427, 247, -919, -296, 334, 657, 3, -785, -75, -700, 895, -212, 947, 992, -149, 924, -328, -513, 140, -995, -609, 980, 14, 661, -83, 504, -929, 854, 589, -612, 799, -180, 522, -138, -601, 840, -876, -5, 170, -14, 94, -661, 184, -666, -705, -511, 770, -242, 773, 311, -882, -685, -859, -732, 144, 792, 356, -330, -788, 732, -59, 957, 86, -250, 908, -552, -813, 271, -51, -787, 897, -448, -293, -753, 894, 324, -539, -710, -276, 243, -427, 458, -275, 120, 870, 770, 731, 580, 747, 695, 902, 484, -346, 763, 961, 364, 599, -970, -988, 492, -948, 153, 469, -752, -525, -508, -742, 677, -978, -494, -448, 870, -767, 87, 429, 390, 161, -319, -100, -235, 16, 282, 385, -143, -32, -457, 134, 873, 700, -248, -354, 632, -777, 588, 353, -696, 363, -784, -677, 404, -828, -171, -764, -71, -128, -36, 470, -305, -20, -237, 866, 854, 857, -272, 340, 81, -880, -90, -181, -457, -522, -651, 507, 82, -367, -555, -814, -129, 116, 254, -740, 155, 496, 987, -874, -891, 405, 840, -226, 721, -318, 730, -26, 517, -316, -758, -86, 913, -982, -597, -540, 924, -139, -218, -11, 253, 256, -439, -65, -990, -505, -748, -609, 728, -885, -681, -301, -271, 594, -224, 750, 775, -379, -929, -658, 541, 219, 278, 249, 982, -714, -714, 342, 813, 365, 137, -320, 254, 50, -357, -52, -977, 903, 97, 535, -688, -801, -789, 913, -588, 904, -17, -643, 961, 72, -999, -55, -410, -810, 701, -291, -157, 744, -500, 617, -591, 54, 779, 623, -998, -121, -578, -989, -449, 734, 476, -360, 722, -817, 42, 151, 940, -449, 405, -582, 549, 965, 946, 364, -731, 874, -790, -70, 909, 106, 9, -165, -708, -966, 335, 625, -466, 940, -803, 407, 993, -522, -174, -167, 306, -258, -720, -348, 809, 101, -173, 648, -691, -580, 335, 37, -317, 53, 21, -847, -97, -902, 461, -551, 251, 950, -63, -830, 858, -578, 376, -524, 91, 493, 950, 942, 865, -387, -541, 826, 72, 206, -428, -991, -586, 293, 229, 828, 20, -813, 302, -861, -270, -880, -172, -952, 428, 974, -592, 926, -297, 892, -958, 354, 205, 417, 418, -450, -138, -777, 396, 49, -704, 534, -3, -805, 745, -617, -74, -904, -265, -314, -990, 762, 866, -329, 887, -628, -620, -974, -229, 546, -315, -477, -15, 129, -400, 994, 378, -16, 710, 22, 403, -386, 23, -926, -791, -800, -421, 312, 394, -1, -304, -33, 480, 766, 310, -663, -544, 514, -386, -442, -423, -150, -180, -472, -595, 678, 92, 831, -705, -955, 577, -839, 705, 274, -221, -617, -318, -87, -938, 281, -875, 316, -956, -476, -282, 680, 676, 239, 834, 862, -637, 726, 64, 150, -918, -510, 509, 281, -117, -583, 711, -714, 358, -287, -824, -459, -758, -217, -401, -280, 997, 744, 845, 784, 269, 319, -178, 498, 9, 309, 952, -778, -70, 689, -606, 259, 730, -159, -377, 827, -58, 979, 177, 37, -181, -920, -13, -127, 13, -965, 60, 949, -925, -407, -557, -595, -373, -17, 328, 903, -467, 64, -479, -863, -484, -488, 744, -634, -818, -104, -496, -304, 258, 527, -784, -698, 464, -605, 860, 178, 253, -354, 956, 260, 149, -437, -294, -562, -803, -962, 989, 256, 561, -984, 204, 321, -713, -382, -374, -499, 36, -71, -139, 110, 816, -608, 536, -586, -674, -172, 189, 554, -67, 361, 475, 177, 74, -241, -379, 246, -641, -448, -605, -919, 400, 55, 39, 346, -302, 301, 519, 193, -74, 364, 256, 400, -950, 674, 204, -4, -168, -95, -244, -21, 669, 985, 435, 240, 370, -208, -52, -691, -555, 416, 347, 928, -703, 392, 175, -887, 878, 737, 574, -428, 761, 713, -35, -306, 692, 804, 332, -730, 388, -835, -313, -980, 552, 998, 93, -473, -231, -989, 794, 908, 204, 777, -402, 96, 235, 802, -47, 257, 980, -584, 580, 795, -543, -932, 566, 196, -153, 752, 76, 234, -309, -165, -570, -352, 567, -148, -225, -708, 410, -32, -773, -442, -443, -212, -400, 915, 294, 687, -574, -902, -23, 503, -488, -645, -235, 739, 25, 235, 644, -324, -671, -468, 213, -737, 409, 849, 6, -625, -268, 807, 602, -696, 395, -85, 305, -291, -918, -637, 868, 962, -211, 290, 480, 591, 841, -522, 717, -500, -217, 969, 164, -882, -728, -410, 637, -210, 325, 298, -570, -915, 601, 162, -412, 17, 999, 114, -607, 468, -371, 613, -831, 247, 881, -905, -44, 964, 497, 601, -23, -740, 53, -453, -221, 755, -432, 765, -167, -346, 590, 135, -457, 586, 372, -553, -57, -310, 890, 496, 512, -854, -441, -101, -477, -869, 941, -595, -129, -415, -653, -468, -102, -588, 93, 283, 357, 994, -880, -917, 376, -299, 279, 135, -552, 376, -446, 151, -192, 239, 455, 91, 69, -323, 283, -236, 672, -243, -905, -50, 121, -551, -583, 727, 58, -413, 318, -403, -665, -522, 19, 305, 377, 779, -93, -282, -971, 891, -413, -473, -511, 429, -413, 369, 734, -818, 689, 795, 94, -893, -999, -485, -720, -901, 668, -579, 643, -527, 199, 846, -847, 904, -951, 12, 31, 986, 707, 688, -253, 57, 544, -34, -342, 683, -621, -767, -25, -769, 320, -223, 795, 409, 384, -167, -105, 92, 779, 531, -626, -358, -966, 579, 274, -783, 112, 294, -143, -786, 380, 954, -547, 124, -663, -260, -763, -827, -252, 648, 971, -127, -219, -628, -494, 603, -123, 366, 589, -714, -656, -351, 542, -341, 921, 483, 273, -18, -595, -929, -24, 555, 601, 61, -681, 993, 959, -222, -562, 30, 3, -869, -936, -227, 571, -758, 601, 932, -660, 62, -948, -242, 545, 818, -829, -831, -874, -646, -376, -134, 258, 905, 427, -432, -880, -643, -144, 695, -617, 26, -666, 701, -351, -163, 481, 213, 347, 222, 510, 761, 420, 807, 175, -597, 428, -401, -593, 522, 512, -577, 326, 157, -629, 268, 114, -725, -287, -822, -443, 619, 977, 686, 850, 829, -515, 934, -12, -506, -882, -726, 981, 580, -37, 929, 880, -806, 41, 254, -855, -983, -169, 842, -279, -87, 71, 283, 364, -722, 174, -936, -221, -668, 765, -256, 394, 680, 968, -854, -513, 962, -895, -25, -631, 331, 951, -387, 655, -23, -938, -166, 298, 905, -395, 792, -148, -199, -485, -635, 72, 55, 631, 741, 261, -716, -557, -311, -232, -43, -28, -597, -842, -261, -535, 704, 575, -597, -78, -157, 406, -673, -399, -45, 765, 173, 460, -55, -463, -891, 671, 46, -257, 409, -338, -34, -440, -776, 522, -21, 932, -635, -926, 957, 550, -237, -322, -143, -107, -834, 82, -997, -521, -300, -243, -9, -574, 485, -711, -392, 454, 507, -456, 980, -407, 283, -966, 562, -219, 580, 460, -326, -256, -171, -934, 373, -496, -660, 949, 323, 75, -907, -912, -420, -374, -251, 241, -113, -136, 865, -772, 371, 488, -689, -787, -573, -655, 373, 581, 534, -505, 544, -481, -679, 526, -830, -750, 206, 18, -112, -219, 807, 319, -368, -569, 7, 68, -449, 862, -345, 682, 296, -757, -819, 753, -720, -424, 157, 861, 31, -816, -282, -892, -246, -618, 378, 601, -552, -821, -798, 377, -750, 422, 691, -329, -509, 859, -852, 606, 379, -78, 447, 681, 258, 736, -397, -617, 502, -108, -358, 661, -500, -838, -173, 406, 647, 540, -47, -53, 949, -464, -148, -474, 187, -431, -639, -396, 402, 356, 830, 838, -282, -543, -307, -527, 714, 955, 40, 765, 207, 354, 334, 643, -993, 559, -370, 932, 191, -270, -362, 68, 118, -408, -494, -292, -654, -937, 387, 270, -392, 160, 158, -175, 181, -846, 680, 714, 160, 533, -61, 912, -308, -518, -158, 503, 277, -495, -564, 652, 579, -329, 290, -486, 555, -422, -763, -447, -891, 736, -830, 509, 198, -539, 750, 644, -679, -519, -382, 14, 726, -107, 803, 378, -795, 453, -440, 875, -450, 952, -300, -721, -725, 893, 970, 89, 804, 583, 900, -639, -239, 703, -28, 765, 194, -464, 895, -407, 615, -21, 674, 301, -344, 846, -45, -236, 492, -863, -308, -686, 514, -635, -305, -715, -494, 830, -233, -617, -553, 505, 180, -247, -998, 305, -960, 919, -837, -218, 500, -417, -816, -474, -118, 959, -981, -643, 598, 860, -839, -540, -488, -61, 86, 235, 582, -840, 919, 318, -363, 202, -115, 369, -720, -989, -31, 339, 861, -281, -354, 162, 859, 900, -322, -832, -515, 32, 646, 68, -468, -749, 101, 431, -997, -757, 557, -305, 934, 590, -752, -768, -461, -820, -978, -717, -277, -52, -160, -438, 930, 139, -416, -915, -442, 175, -385, 862, -11, -337, -181, 1, 33, -870, -139, -208, 699, 854, -191, 264, -25, 49, -988, -435, -79, 42, 975, -271, 868, -958, -296, -33, 185, 40, -241, 851, -621, 449, 766, -994, -373, 922, 90, -273, 999, -967, 545, -197, -816, 661, 939, -686, 667, 327, -680, 447, -368, 388, -641, -588, 886, -231, -110, -464, 245, 46, -634, -985, 259, 61, -880, -188, 950, -276, -860, -409, -519, 81, -365, -935, -936, 520, 52, 1000, -520, 94, 692, -913, -159, 274, 107, 230, -849, -340, 386, -873, 720, 173, 189, 433, 882, -729, -178, -225, -297, 801, -3, 817, -990, 750, 210, 481, -902, -562, 703, -977, 373, 9, -274, -518, 867, 852, 405, 109, 902, 495, 830, -476, -854, 197, -388, 356, 984, -524, -734, 853, 875, 302, 985, -228, 709, 302, 696, 407, -925, -301, -833, 610, -829, -463, 582, 342, 540, -981, 0, 198, -515, 588, 815, -298, 255, -876, -385, -604, 25, 461, 578, -663, -957, 876, -71, 995, -712, 688, -929, 500, -215, 991, 567, -138, 487, 45, 51, 11, 171, 770, -53, -329, 687, 191, 730, -310, -731, 486, -844, -276, -876, 964, -813, -452, -983, 53, 884, -503, -877, 727, -935, -893, -700, 754, -542, 813, 91, 872, -862, -858, 101, 153, 425, -848, -749, 408, 634, 743, 285, -34, -293, 525, 468, 315, -864, 994, -18, -290, 812, -321, -28, 204, 128, 124, 470, 190, 222, 351, -407, 916, 642, 964, 329, 678, 115, -345, -408, 154, -979, -624, 146, -701, -142, -251, 676, -366, 562, -639, -512, -548, -132, -266, -114, 482, -252, 609, 515, 786, 714, 559, 755, 911, 795, -193, -37, -460, -747, -885, -519, -747, -423, 97, -203, 546, 134, -393, 542, -557, -361, 450, 423, -235, -736, 866, -707, 369, -71, -786, 111, -68, -404, 885, 960, 276, -503, -443, 695, -376, -261, -832, 482, 215, 412, -260, -106, -85, -348, 109, 749, -787, -325, 439, -426, 129, -520, 371, 607, -31, 107, 377, 977, 94, 662, -1, 266, 216, 348, 514, -578, 617, 685, -510, -319, 545, 728, 958, 404, -882, 822, 799, -656, -1, -931, -50, -742, 597, 599, -542, 36, -881, -192, -64, 491, 723, -764, -439, 190, 727, -788, -37, -64, -560, -424, -130, 520, 610, -223, 211, 676, 812, 446, -779, 868, -562, -980, 694, -586, -121, -658, 48, -651, 130, -330, -405, 88, -626, -69, 311, -815, 926, 803, -851, 483, 671, -282, 20, 630, 237, 678, -1000, -971, -472, 865, 423, -143, 544, -391, 421, 113, 787, 77}, 1000, 1));
    }

    /**
     * 参考：<a href="https://leetcode.cn/problems/sum-of-k-subarrays-with-length-at-least-m/solutions/3591733/hua-fen-xing-dp-qian-zhui-he-shi-zi-bian-3k0w/"></a>
     *
     * @param nums
     * @param k
     * @param m
     * @return
     */
    public static int maxSum(int[] nums, int k, int m) {
        int length = nums.length;
        /**
         * 数组nums的前缀和
         */
        int[] prefixSums = new int[length + 1];
        /**
         * dp[i][j]表示数组nums长为i的前缀子数组中j个长度至少为m的不重叠子数组的最大和
         */
        int[][] dp = new int[length + 1][k + 1];
        /**
         * 初始化dp[i][j]为Integer.MIN_VALUE，假设数组nums长为i的前缀子数组中不存在j个长度至少为m的不重叠子数组
         */
        for (int i = 0; i <= length; i++) {
            for (int j = 1; j <= k; j++) {
                dp[i][j] = Integer.MIN_VALUE;
            }
        }

        for (int i = 0; i < length; i++) {
            prefixSums[i + 1] = prefixSums[i] + nums[i];
        }

        for (int i = 1; i <= k; i++) {
            int help = Integer.MIN_VALUE;
            /**
             * 因为要包含i个长度至少为m的不重叠子数组，当前前缀子数组的长度∈[i*m,length]，假设当前前缀子数组的长度为j。
             * 如果nums[j-1]不包含在i个长度至少为m的不重叠子数组中，则dp[j][i]等于dp[j-1][i]；
             * 如果nums[j-1]包含在i个长度至少为m的不重叠子数组中，则包含前面i-1个长度至少为m的不重叠子数组的前缀子数组的长度∈
             * [(i-1)*m,j-m]，最后一个长度至少为m的不重叠子数组的长度∈[m,j-(i-1)*m]。假设前面i-1个长度至少为m的不重叠子数组的前缀子数
             * 组的长度为l，则前面i-1个长度至少为m的不重叠子数组的最大和为dp[l][i-1]，第i个为prefixSums[j]-prefixSums[l]，则
             * dp[j][i]等于max(dp[l][i-1]+prefixSums[j]-prefixSums[l])，即prefixSums[j]+max(dp[l][i-1]-prefixSums[l])，其
             * 中l∈[(i-1)*m,j-m]，动态维护变量help=max(dp[l][i-1]-prefixSums[l])
             */
            for (int j = i * m; j <= length; j++) {
                help = Math.max(help, dp[j - m][i - 1] - prefixSums[j - m]);
                dp[j][i] = Math.max(dp[j - 1][i], help + prefixSums[j]);
            }
        }
        return dp[length][k];
    }
}
