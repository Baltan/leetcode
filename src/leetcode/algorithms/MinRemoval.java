package leetcode.algorithms;

import java.util.Arrays;

/**
 * Description: 3634. Minimum Removals to Balance Array
 *
 * @author baltan
 * @date 2025/9/4 16:22
 */
public class MinRemoval {
    public static void main(String[] args) {
        System.out.println(minRemoval(new int[]{14944951, 1742869, 51757761, 56774136, 6521521, 48397767, 68559884, 39275741, 2750064, 42399816, 11892612, 12348969, 14033347, 66379882, 45864587, 36629395, 7761382, 50885244, 12287057, 31492634, 10390356, 52286292, 69149378, 15836909, 26121306, 33387576, 63727750, 16701018, 23950991, 68419134, 1356664, 51018056, 5616654, 16680553, 36200484, 26750062, 15030011, 51537522, 7270369, 63163229, 19125812, 38318788, 9196435, 36920470, 17948650, 962208, 60113732, 1392807, 27127557, 42103402, 57812806, 63502302, 62896337, 56580232, 50124188, 63486144, 6905169, 60223348, 151382, 62519772, 8419426, 50118129, 47252331, 16867705, 8420914, 11309745, 16536243, 60402892, 9833954, 7341930, 3413794, 50243767, 23203427, 10415178, 35080390, 12111948, 37289690, 39599679, 686691, 45239012, 19790425, 54795861, 20748936, 39510235, 28582219, 25706135, 57035207, 59352272, 59536690, 32652604, 53928053, 50289823, 350301, 2314057, 25171684, 32453197, 62314215, 48612306, 8843347, 48293916, 12701489, 17605493, 66572696, 30527464, 51567675, 32023125, 9922817, 1038249, 27135268, 7169082, 56525589, 25156534, 68716524, 15700625, 15798265, 60581536, 49430662, 4813374, 13844105, 61825166, 40120317, 38272264, 6117004, 9326221, 457900, 20976724, 45454235, 60747060, 23398279, 43153223, 4290373, 29787727, 28176035, 41310995, 49258994, 28267469, 57591667, 39195350, 29927613, 1670536, 16323422, 47382424, 18526840, 50089907, 816034, 47949885, 21978403, 18180216, 21037050, 29418646, 31193736, 67672882, 7452293, 9656558, 37885215, 50138863, 50978640, 33181807, 27442193, 59477446, 35196830, 29769410, 41552742, 36541038, 7697696, 44454991, 55830879, 46336872, 54836624, 16274898, 57582477, 8390360, 34939466, 63100744, 18515544, 13448056, 24888528, 35943434, 24214880, 20981957, 9817510, 58795727, 55738223, 31268329, 9825436, 17984979, 12492910, 55417095, 48890778, 32388741, 28776169, 12385250, 18656766, 29672990, 22314935, 30905148, 27164025, 51805522, 56492770, 67306704, 1387308, 29404048, 9822659, 20997688, 34365488, 23891809, 19317096, 39340469, 22929688, 18191558, 29226588, 51392327, 20267674, 46875804, 54060725, 7816179, 47318222, 38356336, 5771462, 2368284, 15674636, 62083715, 5903167, 43494281, 54100401, 42340181, 67961232, 56777611, 20135844, 55785517, 64506993, 33737040, 8148559, 3883984, 45243873, 46259623, 41690641, 41499108, 51410848, 52141013, 18681887, 59803570, 36609425, 52748330, 20588200, 42365220, 25287839, 5570553, 48158764, 36083552, 36203419, 44725039, 31056972, 30697776, 62179702, 54860996, 36059255, 24932947, 47066993, 11807000, 21114938, 38367324, 42099798, 49069735, 66291601, 5346890, 2746052, 64040319, 2880303, 1319560, 9438485, 45449744, 6970885, 29583941, 63672007, 43189672, 8766422, 40811107, 50054166, 7579172, 7360266, 68548080, 9260436, 57973565, 54510959, 4353243, 25944447, 16698606, 68257893, 42081146, 16144711, 50786442, 29915710, 61077328, 37004661, 26570766, 6072995, 18683491, 5468059, 63511604, 38911275, 58581338, 33497973, 54333831, 13968338, 24066328, 17125053, 142683, 20520509, 51078736, 19824369, 68705948, 11216193, 33085317, 62872557, 56680018, 67355513, 25202304, 64309840, 17981696, 53635773, 31047038, 63838318, 13798018, 46502162, 36352744, 17330942, 13293205, 29454716, 35694903, 29538910, 66445813, 17122641, 39554444, 5413326, 59891422, 58825468, 60254628, 831788, 485806, 46990108, 42119593, 20969852, 62898953, 4798081, 6615504, 61158375, 1809715, 68404318, 44266350, 14796538, 16295034, 1066349, 7835823, 63694088, 36311047, 40827754, 43278523, 26229005, 49960669, 24346644, 57577813, 45914256, 6622405, 42747864, 13863064, 20974392, 12911194, 39889447, 36975316, 59436393, 21587318, 52555839, 1365305, 66308944, 44269066, 19099637, 18326320, 52513999, 42743675, 1908838, 10572053, 48190929, 41097613, 53227218, 46626718, 59437561, 9124665, 66241348, 49259046, 26457691, 28277292, 56878884, 2861052, 43075847, 41283452, 43017519, 9701321, 14870415, 14021650, 33580000, 51505866, 29390222, 69535578, 5153655, 5567396, 8725802, 37588575, 38783267, 66641944, 7989732, 1430956}, 84298));
        System.out.println(minRemoval(new int[]{2, 1, 5}, 2));
        System.out.println(minRemoval(new int[]{1, 6, 2, 9}, 3));
        System.out.println(minRemoval(new int[]{4, 6}, 2));
    }

    public static int minRemoval(int[] nums, int k) {
        int result = Integer.MAX_VALUE;
        Arrays.sort(nums);
        /**
         * 依次计算当剩余数组中的最小值为nums[i]时，使剩余数组平衡的最少移除元素个数
         */
        for (int i = 0; i < nums.length; i++) {
            /**
             * 剩余数组中元素最大值的上限
             */
            long max = (long) nums[i] * k;
            int lo = i;
            int hi = nums.length - 1;
            /**
             * 二分查找数组nums中小于等于max的最大元素的索引
             */
            while (lo < hi) {
                int mid = (lo + hi + 1) / 2;

                if (nums[mid] > max) {
                    hi = mid - 1;
                } else {
                    lo = mid;
                }
            }
            /**
             * 剩余数组为nums[i……lo]，需要从原数组中移除元素的个数为nums.length-(lo-i+1)
             */
            result = Math.min(result, nums.length - (lo - i + 1));
        }
        return result;
    }
}
